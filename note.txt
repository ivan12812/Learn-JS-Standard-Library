JavaScript Standard Library

NUMBER
    - Number merupakan function yang digunakan untuk melakukan ke tipe data number.
    - Jika data tidak bisa dikonversi ke number, secara otomatis hasilnya ada NaN.

    Number Static Properties
        - Nummber memiliki banyak setatic properties, seperti :
            1. Number.MIN_VALUE untuk mendapatkan munber minimal.
            2. Number.MAX_VALUE untuk mendapatkan number maksimal.

    Number Static Method
        - Number memiliki banyak setatic method, seperti :
            1. Number.isNaN(value) untuk mengecek apakah NaN atau bukan.
            2. Number.isInteger(value) untuk mengecek apakah value berupa integer atau bukan.

    Number Instance Method
        - Number memiliki banyak instance method, seperti :
        - Number.toLocalString(local) untuk mengubah number menjadi string sesuai locale:
        - Number.toString(radix) untuk mengubah number menjadi string sesuai radix.


STRING 
    - Tipe data sudah kita bahas pada materi JavaScript Dasar
    - Namun kita belum membahas method atau juga instace properties yang terdapat di String.
        String Instance Method dan properties
            - String sendiri memiliki banyak instance dan propeties.
            - Hal ini menjadikan untuk memanipulasi data string sangat mudah di JS. seperti mengubah menjadi lowercase(hurup kecil semua), UPPERCASE(Hurup besar semua), memotong string menjadi array dan lain-lain.


ARRAY 
    Array Loop
        - Sebelumnya kita bisa menggunakan for in dan for of untuk melakukan iterasi array, namun Array juga memiliki method yang bernama forEach().
        - Method forEach bisa digunakann juga untuk melakukan iterasi data array.

    Array Queue
        - Dalam struktur data, terdapat tipe struktur data bernama Queue (Antrian)
        - Dimana data masuk akan diposisikan di urutkan paling belakang.
        - Sedangkan data keluar akan diposisiakan dari urutan paling depan.
        - Mirip sekali dengan antrian, atau istilahnya FIFO(first in firset out)
        - Kita bisa menggunakan array dengan bantuan function 
            push() untuk menambah data di belakang, dan 
            shift() untuk mengambil dan menghapus data paling depan.

    Array Stack
        - Struktur data stack (Tumpukan) kebalikan dari Queue, dimana aturannya mirip dengan tumpukan kartu.
        - Saat kita masukan data, kita akan mengambil data dari paling belakang (atau atas).
        - Sedangkan saat kita mengambil data, kita akan mengambil data dari palinig belakang (atau atas) terleih dahulu.
        - Stack ini sifatnya LIFO (Last in first out).
            Untuk menambah diurutan belakang, kita bisa menggunakan function push().
            Dan untuk mengambil dan menghapus paling belakang, kita bisa menggunakan function pop().

    Array Search
        - Array memiliki banyak function untuk melakukan pencarian.
            find(value => boolean) : value       -----> Mencari data sesuai dengan kondisi.
            findIndex(value => boolean) : number -----> Mencari  data index sesuai dengan kondisi.
            includes(value) : boolean            -----> Mengecek apakah terdapat data.
            indexOf(value) : number              -----> Mengecek posisi index data.
            lastIndexOf(value) : number          -----> Mengecek posisi index data terakhir.

    Array Filter
        - Array memiliki function untuk melakukan filter data.
            filter(value => boolean) : Array    -----> Melakukan filter data yang kondisinya bernilai true.

    Array Transform
        - Array juga memiliki function yang digunakan untuk melakukan trandformasi
            map(value => result) : Array<result>            -----> Melakukan transform tiap value dan menghasilkan array result.
            reduce(resultBefore, value => result) : result  -----> Melakukan transform dengan menggunakan value array dan value selanjutnya, lalu hasilnya dilajtkan ke iterasi selanjutnya.
            reduceRight(resultBefore, value => result)      -----> Sama seperti reduce(), namun dilakukan dari belakang.


OBJECT
    Object Freeze dan Seal.
        - Secara default, object bisa diubah atau dihapus propertiesnya.
        - Jika kita ingin mengubah suatu object menjadi object yang tidak bisa diubah atau dihapus, kita bisa menggunakan beberapa static method.
            1. Object.freeze() digunakan untuk mengubah object menjadi object yang tidak bisa diubah atau dihapus attribute nya.
            2. Object.seal() digunakan untuk mengubah object menjadi object yang tidak bisa dihapus attribute nya.

    Object Assign
        - Kadang kita ada kasus menggabungkan semua attribute dar sebuah object ke objec lain.
        - Hal ini bisa kita lakukan dengan menggunakan Object.assign(target, source).

    Object Property Name & value
        - Object juga memiliki static method untuk digunakan mengambil semua properties names dan values.
            1. Object.values() digunakan untuk mengambil semua property value.
            2. Object.getPropertyNames() digunakan untuk mengambil semua property name.

JSON
    Pengenalan JSON
        - JSON adalah JavaScript Object Notation.
        - JSON merupakan data string yang berbentuk meirip dengan JavaScript Object.
        - Saat ini JSON banyak sekali digunakan untuk komunikasi antar server dan client.
        - JavaScript mendkung konversi data dari dtring json ke object ataupun sebaliknya.
        - JSON.stringify() digunakan untuk melakukan konversi dari Object ke String.
        - JSON.parse() digunakan untuk melakukan konversi dari string ke Object.


BIGINT
    - Big interjer merupakan tipe dat number yang bisa mencakup data angka lebih dari Number.MAX_SAFE_INTEGER.
    - Untuk kasus number yang lebih dari itu, sangat disarankan menggunakan tipe data Bigint.
    - Cara penggunaan BigInt sama saja dengan penggunaan Number dan juga operatornya.
